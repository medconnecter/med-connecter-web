# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI/CD

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x, 23.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run type checking
      run: npm run type-check
    
    - name: Run linting
      run: npm run lint
    
    - name: Run tests
      run: npm run test:coverage
      env:
        NODE_ENV: test
    
    - name: Upload test coverage
      uses: codecov/codecov-action@v4
      if: matrix.node-version == '23.x'
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  security-audit:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 23.x
      uses: actions/setup-node@v4
      with:
        node-version: '23.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level=moderate

  build:
    runs-on: ubuntu-latest
    needs: [test, security-audit]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 23.x
      uses: actions/setup-node@v4
      with:
        node-version: '23.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build:prod
    
    - name: Create deployment package
      run: |
        mkdir -p dist-package
        cp -r dist/* dist-package/
        cp package.json dist-package/
        cp nginx.conf dist-package/
        cp Dockerfile dist-package/
        tar -czf med-connecter-web.tar.gz -C dist-package .
    
    - name: Upload deployment package
      uses: actions/upload-artifact@v4
      with:
        name: med-connecter-web-deployment
        path: med-connecter-web.tar.gz
        retention-days: 7
